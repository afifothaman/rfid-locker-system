rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if user is admin or manager
    function isAdminOrManager() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'manager'];
    }
    
    // Users collection - users can read/write their own, admins can manage all
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Locker assignments - authenticated users can read/write
    match /lockerAssignments/{assignmentId} {
      allow read, write: if request.auth != null;
    }
    
    // Access logs - authenticated users can read/write
    match /access_logs/{logId} {
      allow read, write: if request.auth != null;
    }
    
    // Lockers - read access for authenticated users, write access for admins/managers
    match /lockers/{lockerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdminOrManager();
    }
    
    // Security events - admin/manager access only
    match /security_events/{document} {
      allow read, write: if request.auth != null && isAdminOrManager();
    }
    
    // Test documents - authenticated users can create for testing
    match /test/{document} {
      allow read, write: if request.auth != null;
    }
  }
}